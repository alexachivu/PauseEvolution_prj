require(bigWig)
require(ggplot2)
require(matrixcalc)
require(BRGenomics)
require(dplyr)
require(plyr)
require(RColorBrewer)
require(prodlim)
require(GenomicRanges)
require(ggplot2)
require(pheatmap)

fishersPausing<-function(tssCount,geneBodyCount,tssWindow=200,geneLength=1000){
  total<-tssCount+geneBodyCount
  
  nulltssCount<-tssCount
  nullgeneBodyCount<-round(tssCount*(geneLength-tssWindow/2)/tssWindow)
  
  contTable<-t(matrix(c(c(tssCount,geneBodyCount),c(nulltssCount,nullgeneBodyCount)),nrow=2,ncol=2))
  
  return(fisher.test(contTable,alternative = "greater")$p.value)
}

fishersTest<-function(scores,feature,featureLengths,tssWindow) {
  scores$featureLengths<-featureLengths
  scores$tssWindow<-2*tssWindow
  
  scores$fishersPval<-mapply(fishersPausing,scores$tss,scores$tssAdj,scores$tssWindow,scores$featureLengths)
  scores$padj<-p.adjust(scores$fishersPval,method="BH")
  
  scores$gene<-paste(paste(feature[,1],feature[,2],sep=":"),feature[,3],sep="-")
  
  return(scores)
}

pausingIndex<-function(scores,feature,featureLengths,tssWindow) {
  scores$tssScaled<-scores$tss/(2*tssWindow)
  scores$tssAdjScaled<-scores$tssAdj/(featureLengths-tssWindow)
  
  scores$pausingIndex<-scores$tssScaled/(scores$tssAdjScaled)
  
  scores$gene<-paste(paste(feature[,1],feature[,2],sep=":"),feature[,3],sep="-")
  
  return(scores)
}




fishersAndPausingIndex<-function(directbed=NULL,bedFile,HP_FILE=NULL,HM_FILE=NULL,featureColumn,featureSelect,featureLength,featureWindow=1000,tssWindow=200,precision=TRUE,prefix,bwpath,removeOverlappedFeatures=TRUE,activeFeatures=TRUE) {
  if(is.null(HP_FILE)){
    #bwp<-paste(prefix,'_all-merge.plus.bw',sep="")
    #bwm<-paste(prefix,'_all-merge.minus.bw',sep="")

    bwp<-paste(prefix,'plus.bw',sep="")
    bwm<-paste(prefix,'minus.bw',sep="")


  }else{
    bwp<-HP_FILE
    bwm<-HM_FILE
  }
  HP <- load.bigWig(paste(bwpath, bwp, sep=""))
  HM <- load.bigWig(paste(bwpath, bwm, sep=""))
  
  feature<-loadBed(directbed=directbed,bedFile=bedFile,featureColumn=featureColumn,featureSelect=featureSelect,featureLength=featureLength)
  feature<-feature[(feature[,2]-tssWindow)>0,]
  
  if(activeFeatures){
    feature<-reduceToActiveFeatures(feature,paste(bwpath, bwp, sep=""),paste(bwpath, bwm, sep=""),precision=precision)
  }
  if(removeOverlappedFeatures){
    feature<-removeOverlappingFeatures(feature)
  }
  
  feature<-feature[feature[,1]%in%HP$chroms,]
  feature<-feature[feature[,1]%in%HM$chroms,]
  
  feature<-feature[(feature[,3]-feature[,2]>tssWindow),]
  
  featurePlus<-feature[feature$strand=='+',]
  featureMinus<-feature[feature$strand=='-',]
  feature<-rbind(featurePlus,featureMinus)
  
  featureLengths<-feature[,3]-feature[,2]
  
  tss<-generateBedIntervals(feature,leftFlank=tssWindow, rightFlank=tssWindow,offset=0)
  
  tss_adj<-tss
  
  tss_adj[tss_adj$strand=='+',2]<-tss[tss_adj$strand=='+',3]
  tss_adj[tss_adj$strand=='+',3]<-featurePlus[,3]
  
  tss_adj[tss_adj$strand=='-',2]<-featureMinus[,2]
  tss_adj[tss_adj$strand=='-',3]<-tss[tss_adj$strand=='-',2]
  
  tssScores<-bed6.region.bpQuery.bigWig(HP,HM,bed=tss,op='sum')
  tssAdjScores<-bed6.region.bpQuery.bigWig(HP,HM,bed=tss_adj,op='sum')
  
  invertScore<-unlist(lapply(tss$strand,function(x) if(x=='+'){1}else{-1}))
  
  scores<-as.data.frame(cbind(tssScores*invertScore,tssAdjScores*invertScore))
  colnames(scores)<-c('tss','tssAdj')
  
  fisherScores<-fishersTest(scores=scores,feature=feature,featureLengths=featureLengths,tssWindow=tssWindow)
  pausingScores<-pausingIndex(scores=scores,feature=feature,featureLengths=featureLengths,tssWindow=tssWindow)
  
  return(merge(fisherScores,pausingScores,by=c('gene','tss','tssAdj')))
}


